"use strict";(self.webpackChunklazyvim=self.webpackChunklazyvim||[]).push([[1087],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>N});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},k="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),k=m(a),u=i,N=k["".concat(o,".").concat(u)]||k[u]||d[u]||l;return a?n.createElement(N,r(r({ref:t},s),{},{components:a})):n.createElement(N,r({ref:t},s))}));function N(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[k]="string"==typeof e?e:i,r[1]=p;for(var m=2;m<l;m++)r[m]=a[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},6530:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>k,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var n=a(7462),i=(a(7294),a(3905));const l={sidebar_position:2},r="\ud83d\udcf0 What's new?",p={unversionedId:"news",id:"news",title:"\ud83d\udcf0 What's new?",description:"15.x",source:"@site/docs/news.md",sourceDirName:".",slug:"/news",permalink:"/news",draft:!1,editUrl:"https://github.com/LazyVim/lazyvim.github.io/tree/main/docs/news.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udee0\ufe0f Installation",permalink:"/installation"},next:{title:"\u2328\ufe0f Keymaps",permalink:"/keymaps"}},o={},m=[{value:"15.x",id:"15x",level:2},{value:"Changes",id:"changes",level:3},{value:"14.x",id:"14x",level:2},{value:"Added Plugins",id:"added-plugins",level:3},{value:"Removed Plugins",id:"removed-plugins",level:3},{value:"Changes",id:"changes-1",level:3},{value:"Keymaps",id:"keymaps",level:3},{value:"13.x",id:"13x",level:2},{value:"12.x",id:"12x",level:2},{value:"11.x",id:"11x",level:2},{value:"10.x",id:"10x",level:2}],s={toc:m};function k(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"-whats-new"},"\ud83d\udcf0 What's new?"),(0,i.kt)("h2",{id:"15x"},"15.x"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Neovim")," ",(0,i.kt)("inlineCode",{parentName:"p"},">= 0.11.0")," includes a lot of changes to the underlying LSP implementation."),(0,i.kt)("p",null,"Going forward, ",(0,i.kt)("strong",{parentName:"p"},"LazyVim")," requires ",(0,i.kt)("strong",{parentName:"p"},"Neovim")," ",(0,i.kt)("inlineCode",{parentName:"p"},">= 0.11.0"),", and drops support for older versions."),(0,i.kt)("h3",{id:"changes"},"Changes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"removed compatibility code for Neovim ",(0,i.kt)("inlineCode",{parentName:"li"},"< 0.11")),(0,i.kt)("li",{parentName:"ul"},"updated all LSP code to use the new LSP implementation"),(0,i.kt)("li",{parentName:"ul"},"migrated ",(0,i.kt)("strong",{parentName:"li"},"mason.nvim")," and ",(0,i.kt)("strong",{parentName:"li"},"mason-lspconfig.nvim")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"v2.x")),(0,i.kt)("li",{parentName:"ul"},"added new ",(0,i.kt)("inlineCode",{parentName:"li"},"treesitter-main")," extra to test the new ",(0,i.kt)("inlineCode",{parentName:"li"},"main")," branch of ",(0,i.kt)("inlineCode",{parentName:"li"},"nvim-treesitter"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"after enabling, you will get errors. Update with ",(0,i.kt)("inlineCode",{parentName:"li"},":Lazy")," and restart Neovim")))),(0,i.kt)("h2",{id:"14x"},"14.x"),(0,i.kt)("p",null,"Big new release with a lot of changes and improvements!\nTwo new plugins have been added, and a lot of plugins have been replaced.\nWith these changes, default ",(0,i.kt)("strong",{parentName:"p"},"LazyVim")," is now just ",(0,i.kt)("inlineCode",{parentName:"p"},"34")," plugins."),(0,i.kt)("h3",{id:"added-plugins"},"Added Plugins"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ibhagwan/fzf-lua"},"fzf-lua")," as a replacement for ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/nvim-telescope/telescope.nvim"},"telescope.nvim"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"to use ",(0,i.kt)("strong",{parentName:"li"},"telescope.nvim")," instead, enable the ",(0,i.kt)("inlineCode",{parentName:"li"},"editor.telescope")," extra"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/saghen/blink.cmp"},"blink.cmp")," as a replacement for ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/hrsh7th/nvim-cmp"},"nvim-cmp"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"to use ",(0,i.kt)("strong",{parentName:"li"},"nvim-cmp")," instead, enable the ",(0,i.kt)("inlineCode",{parentName:"li"},"coding.nvim-cmp")," extra")))),(0,i.kt)("h3",{id:"removed-plugins"},"Removed Plugins"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/stevearc/dressing.nvim"},"dressing.nvim")," (replaced with ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/ibhagwan/fzf-lua"},"fzf-lua")," and ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim"},"snacks.input"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/nvim-telescope/telescope-fzf-native.nvim"},"telescope-fzf-native.nvim")," (replaced with ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/ibhagwan/fzf-lua"},"fzf-lua"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/nvim-telescope/telescope.nvim"},"telescope.nvim")," (replaced with ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/ibhagwan/fzf-lua"},"fzf-lua"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/lukas-reineke/indent-blankline.nvim"},"indent-blankline.nvim")," (replaced with ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Folke/snacks.nvim"},"snacks.indent"),")",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"to use ",(0,i.kt)("strong",{parentName:"li"},"indent-blankline.nvim")," instead, enable the ",(0,i.kt)("inlineCode",{parentName:"li"},"indent-blankline")," extra"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/hrsh7th/nvim-cmp"},"nvim-cmp")," (replaced with ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Saghen/blink.cmp"},"blink"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/hrsh7th/vim-vsnip"},"nvim-snippets")," (replaced with ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Saghen/blink.cmp"},"blink"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/hrsh7th/cmp-buffer"},"cmp-buffer")," (replaced with ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Saghen/blink.cmp"},"blink"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/hrsh7th/cmp-nvim-lsp"},"cmp-nvim-lsp")," (replaced with ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Saghen/blink.cmp"},"blink"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/hrsh7th/cmp-path"},"cmp-path")," (replaced with ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/Saghen/blink.cmp"},"blink"),")")),(0,i.kt)("h3",{id:"changes-1"},"Changes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"added ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/input.md"},(0,i.kt)("inlineCode",{parentName:"a"},"snacks.input"))),(0,i.kt)("li",{parentName:"ul"},"added ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/scroll.md"},(0,i.kt)("inlineCode",{parentName:"a"},"snacks.scroll"))),(0,i.kt)("li",{parentName:"ul"},"added ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/indent.md"},(0,i.kt)("inlineCode",{parentName:"a"},"snacks.indent"))),(0,i.kt)("li",{parentName:"ul"},"added ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/scope.md"},(0,i.kt)("inlineCode",{parentName:"a"},"snacks.scope"))),(0,i.kt)("li",{parentName:"ul"},"added ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/dim.md"},(0,i.kt)("inlineCode",{parentName:"a"},"snacks.dim"))),(0,i.kt)("li",{parentName:"ul"},"added ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/zen.md"},(0,i.kt)("inlineCode",{parentName:"a"},"snacks.zen"))),(0,i.kt)("li",{parentName:"ul"},"changed default ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/which-key.nvim"},(0,i.kt)("inlineCode",{parentName:"a"},"which-key"))," preset to ",(0,i.kt)("inlineCode",{parentName:"li"},"helix")),(0,i.kt)("li",{parentName:"ul"},"drop ",(0,i.kt)("inlineCode",{parentName:"li"},"LazyVim.ui.fg")," in favor of ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/util.md"},(0,i.kt)("inlineCode",{parentName:"a"},"Snacks.util.color")))),(0,i.kt)("p",null,"To disable ",(0,i.kt)("strong",{parentName:"p"},"all animations"),", add the following to your ",(0,i.kt)("inlineCode",{parentName:"p"},"options.lua"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"vim.g.snacks_animate = false\n")),(0,i.kt)("h3",{id:"keymaps"},"Keymaps"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<leader>uz")," to toggle ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/zen.md"},"zen mode")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<leader>uZ")," & ",(0,i.kt)("inlineCode",{parentName:"li"},"<leader>wm")," to toggle ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/zen.md"},"zoom mode")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<leader>uD")," to toggle ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/dim.md"},"dimming")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<leader>ua")," to toggle ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/animate.md"},"animations")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<leader>uS")," to toggle ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/scroll.md"},"scroll")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<leader>ug")," to toggle ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/indent.md"},"indent guides")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/folke/snacks.nvim/blob/main/docs/profiler.md"},(0,i.kt)("inlineCode",{parentName:"a"},"snacks.profiler"))," keymaps under ",(0,i.kt)("inlineCode",{parentName:"li"},"<leader>dp"))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"13x"},"13.x"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"LazyVim")," now uses ",(0,i.kt)("inlineCode",{parentName:"p"},"Snacks.dashboard")," as the default dashboard.\nCheck the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/folke/snacks.nvim/blob/main/docs/dashboard.md"},"docs"),",\nfor more information and examples.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"A new ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/nvimdev/dashboard-nvim"},"dashboard-nvim")," extra\nis available for those who prefer the old dashboard.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Big new release with a lot of changes and improvements!")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The biggest change is the move of a bunch of core features to\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/folke/snacks.nvim"},"snacks.nvim")," and fully\nintegrating it into ",(0,i.kt)("strong",{parentName:"p"},"LazyVim"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"I highly suggest having a look at the ",(0,i.kt)("strong",{parentName:"p"},"snacks.nvim")," documentation\nto see all the new features and improvements. Most important changes:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Snacks.notifier")," for notifications instead of ",(0,i.kt)("inlineCode",{parentName:"li"},"nvim-notify")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Snacks.terminal")," is similar to ",(0,i.kt)("inlineCode",{parentName:"li"},"lazyterm"),", but has more features\nand creates bottom splits by default (similar to the ",(0,i.kt)("inlineCode",{parentName:"li"},"edgy")," integrating)")))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"12x"},"12.x"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Markdown Extra"),": ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/lukas-reineke/headlines.nvim"},"headlines.nvim")," has been removed in favor of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/MeanderingProgrammer/markdown.nvim"},"markdown.nvim"),"\nto spice up your markdown files.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/nvim-pack/nvim-spectre"},"nvim-spectre")," has been removed in favor of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/MagicDuck/grug-far.nvim"},"grug-far.nvim"),".\n",(0,i.kt)("strong",{parentName:"p"},"grug-far.nvim")," has a great UI and feels more intuitive to use.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"This ",(0,i.kt)("strong",{parentName:"p"},"news")," is now also available on the website at ",(0,i.kt)("a",{parentName:"p",href:"https://www.lazyvim.org/news"},"https://www.lazyvim.org/news"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"prettier")," extra now works for all prettier supported filetypes\nand will be enabled for astro/svelte extra if you have a proper\nconfig file with the correct prettier plugin")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"New Language Support:")," SQL, Clojure, Thrift, Elm, Gleam, Angular,\nNuShell, Svelte, Kotlin, Astro, Toml and PHP")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"New Extras:")," ",(0,i.kt)("inlineCode",{parentName:"p"},"copilot-chat"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"git"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"octo"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"inc-rename")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"neogen"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("strong",{parentName:"p"},"typescript")," extra now uses ",(0,i.kt)("inlineCode",{parentName:"p"},"vtsls")," instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"tsserver"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Neovim >= 0.10")," now uses the much faster ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/folke/lazydev.nvim"},"lazydev.nvim"),"\ninstead of ",(0,i.kt)("inlineCode",{parentName:"p"},"neodev.nvim"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"moved ",(0,i.kt)("inlineCode",{parentName:"p"},"neoconf.nvim")," to extras. Project specific LSP settings\ncan be done with a ",(0,i.kt)("inlineCode",{parentName:"p"},".lazy.lua")," file instead."))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"11x"},"11.x"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Keymaps:")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<leader>gB")," to open the current repo in the browser"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"gco")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"gcO")," to add a comment below or above the current line"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<leader>wm")," to toggle window maximize"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"lazydev.nvim:")," faster alternative to ",(0,i.kt)("inlineCode",{parentName:"p"},"neodev.nvim"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Options:")," Added ",(0,i.kt)("inlineCode",{parentName:"p"},"linebreak=true")," to default options.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"mini.ai")," is back as a default plugin! Removing it was a mistake.\nIt's a great plugin that enhances the native text objects.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},":LazyExtras")," now has multiple new sections:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Enabled"),": extras that are currently enabled"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Recommended Languages"),": language extras recommended for the current buffer / directory"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Recommended Plugins"),": extras that are recommended for most users"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Plugins"),": other plugin extras"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Languages"),": other language extras"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"new option ",(0,i.kt)("inlineCode",{parentName:"p"},"vim.g.deprecation_warnings")," to disable deprecation warnings\nDefaults to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),". To enable deprecation warnings, set it to ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," in your ",(0,i.kt)("inlineCode",{parentName:"p"},"options.lua"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"vim-illuminate")," move to extras\nDocument highlights now use native lsp functionality by default"))),(0,i.kt)("p",null,"Since Neovim 0.10 has been released, I've been working on a new version of ",(0,i.kt)("strong",{parentName:"p"},"LazyVim"),"\nthat is fully compatible with all the latest Neovim features."),(0,i.kt)("p",null,"Additionally, some core plugins have been moved to extras."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"native snippets")," are now the default on Neovim 0.10\nOlder versions of Neovim will use the new ",(0,i.kt)("inlineCode",{parentName:"p"},"luasnip")," extra.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"native comments")," are now the default on Neovim 0.10\nOlder versions of Neovim will use the new ",(0,i.kt)("inlineCode",{parentName:"p"},"mini-comment")," extra.\n",(0,i.kt)("inlineCode",{parentName:"p"},"nvim-ts-context-commentstring")," has been integrated in the native comments.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"inlay hints")," have been in ",(0,i.kt)("strong",{parentName:"p"},"LazyVim")," for a while, but are now\nenabled by default. To disable them:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "nvim-lspconfig",\n  opts = {\n    inlay_hints = { enabled = false },\n  }\n}\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"plugins moved to extras:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mini.surround")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mini.indentscope")," scopes are now also highlighted with ",(0,i.kt)("inlineCode",{parentName:"li"},"indent-blankline")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nvim-treesitter-context"))))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"10x"},"10.x"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"added new extra for ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/echasnovski/mini.nvim/blob/main/readmes/mini-diff.md"},"mini.diff"),"\nThis is a plugin similar to gitsigns but with a neat diff overlay\nthat can be toggled with ",(0,i.kt)("inlineCode",{parentName:"p"},"<leader>go"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"trouble.nvim")," has been rewritten from scratch and is now in beta.\nI've added a new extra for it (",(0,i.kt)("inlineCode",{parentName:"p"},"trouble-v3"),") for those of you who want to try it out.\nYou can find the updated docs ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/folke/trouble.nvim/tree/dev"},"here"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The ",(0,i.kt)("strong",{parentName:"p"},"lazygit")," integration now configures:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"the theme based on the colorscheme"),(0,i.kt)("li",{parentName:"ul"},"nerd font icons (v3)"),(0,i.kt)("li",{parentName:"ul"},"editor preset is set to ",(0,i.kt)("inlineCode",{parentName:"li"},"nvim-remote")," for better interop with Neovim"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"The option ",(0,i.kt)("inlineCode",{parentName:"p"},"vim.g.lazygit_theme")," was renamed to ",(0,i.kt)("inlineCode",{parentName:"p"},"vim.g.lazygit_config"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"lazygit")," now automatically uses the colors of your current colorscheme.\nThis is enabled by default. To disable, add the below to your ",(0,i.kt)("inlineCode",{parentName:"p"},"options.lua"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"vim.g.lazygit_config = false\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Added support for ",(0,i.kt)("inlineCode",{parentName:"p"},"basedpyright")," to the ",(0,i.kt)("strong",{parentName:"p"},"python")," extra.\nEnable in your ",(0,i.kt)("inlineCode",{parentName:"p"},"options.lua")," with:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'vim.g.lazyvim_python_lsp = "basedpyright"\n')),(0,i.kt)("p",{parentName:"li"},"Be aware that ",(0,i.kt)("inlineCode",{parentName:"p"},"basedpyright")," is still in development and\nmay not work exactly the same as ",(0,i.kt)("inlineCode",{parentName:"p"},"pyright"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"User extras under ",(0,i.kt)("inlineCode",{parentName:"p"},"lua/plugins/extras")," can now also be managed\nwith ",(0,i.kt)("strong",{parentName:"p"},"LazyExtras"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"nvim-ts-autotag")," is now included by default")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"nvim-treesitter-context")," is now included by default")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Added extra for ",(0,i.kt)("inlineCode",{parentName:"p"},"symbols-outline.nvim"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Added extra for ",(0,i.kt)("inlineCode",{parentName:"p"},"aerial.nvim"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"nvim-navic")," has been removed. If you want to keep using ",(0,i.kt)("inlineCode",{parentName:"p"},"nvim-navic"),",\nyou can enable the ",(0,i.kt)("strong",{parentName:"p"},"editor.navic")," extra")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"New ",(0,i.kt)("inlineCode",{parentName:"p"},":LazyExtras")," command for managing ",(0,i.kt)("strong",{parentName:"p"},"LazyVim")," extras")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Improved ",(0,i.kt)("strong",{parentName:"p"},"formatting"),":"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"LazyVim")," can now work with multiple formatters. Types:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"primary"),": only one primary formatter can be active at a time.\n",(0,i.kt)("em",{parentName:"li"},"(conform, none-ls, LSP)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"secondary"),": multiple secondary formatters can be active ",(0,i.kt)("em",{parentName:"li"},"(eslint, ...)")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"LazyVim")," automatically selects the primary formatter based on the\ncurrent available sources and priorities.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"New ",(0,i.kt)("inlineCode",{parentName:"p"},":LazyFormat")," command for formatting the current selection or buffer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"New ",(0,i.kt)("inlineCode",{parentName:"p"},":LazyFormatInfo")," command for displaying the active formatters\nfor the current buffer")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Auto-formatting can be disabled with:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"vim.g.autoformat = false -- globally\nvim.b.autoformat = false -- buffer-local\n"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"none-ls.nvim")," is no longer installed by default"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"conform.nvim")," is now the default formatter"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"nvim-lint")," is now the default linter"),(0,i.kt)("li",{parentName:"ul"},"If you want to keep using ",(0,i.kt)("inlineCode",{parentName:"li"},"none-ls.nvim"),",\nyou can enable the ",(0,i.kt)("strong",{parentName:"li"},"lsp.none-ls")," extra"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"dashboard.nvim")," is the new default dashboard plugin"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If you want to keep using ",(0,i.kt)("inlineCode",{parentName:"li"},"alpha.nvim"),", you can enable the ",(0,i.kt)("strong",{parentName:"li"},"ui.alpha")," extra"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Improved ",(0,i.kt)("strong",{parentName:"p"},"root detection"),":"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"New ",(0,i.kt)("inlineCode",{parentName:"p"},":LazyRoot")," command that shows info about the root dir detection")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Configurable with ",(0,i.kt)("inlineCode",{parentName:"p"},"vim.g.root_spec")),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'-- LazyVim root dir detection\n-- Each entry can be:\n-- * the name of a detector function like `lsp` or `cwd`\n-- * a pattern or array of patterns like `.git` or `lua`.\n-- * a function with signature `function(buf) -> string|string[]`\nvim.g.root_spec = { "lsp", { ".git", "lua" }, "cwd" }\n\n-- To disable root detection set to just "cwd"\nvim.g.root_spec = { "cwd" }\n')))))))}k.isMDXComponent=!0}}]);