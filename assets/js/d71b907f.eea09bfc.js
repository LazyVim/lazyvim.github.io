"use strict";(self.webpackChunklazyvim=self.webpackChunklazyvim||[]).push([[1334],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=c(t),d=a,f=p["".concat(i,".").concat(d)]||p[d]||m[d]||l;return t?r.createElement(f,u(u({ref:n},s),{},{components:t})):r.createElement(f,u({ref:n},s))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,u=new Array(l);u[0]=d;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o[p]="string"==typeof e?e:a,u[1]=o;for(var c=2;c<l;c++)u[c]=t[c];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(7294),a=t(6010);const l="tabItem_Ymn6";function u(e){let{children:n,hidden:t,className:u}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,u),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>T});var r=t(7462),a=t(7294),l=t(6010),u=t(2466),o=t(6550),i=t(1980),c=t(7392),s=t(12);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}function m(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??p(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function d(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const r=(0,o.k6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,i._X)(l),(0,a.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(r.location.search);n.set(l,e),r.replace({...r.location,search:n.toString()})}),[l,r])]}function h(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,l=m(e),[u,o]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:l}))),[i,c]=f({queryString:t,groupId:r}),[p,h]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,l]=(0,s.Nk)(t);return[r,(0,a.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:r}),b=(()=>{const e=i??p;return d({value:e,tabValues:l})?e:null})();(0,a.useLayoutEffect)((()=>{b&&o(b)}),[b]);return{selectedValue:u,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),c(e),h(e)}),[c,h,l]),tabValues:l}}var b=t(2389);const g="tabList__CuJ",v="tabItem_LNqP";function y(e){let{className:n,block:t,selectedValue:o,selectValue:i,tabValues:c}=e;const s=[],{blockElementScrollPositionUntilNextRender:p}=(0,u.o5)(),m=e=>{const n=e.currentTarget,t=s.indexOf(n),r=c[t].value;r!==o&&(p(n),i(r))},d=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;n=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;n=s[t]??s[s.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},n)},c.map((e=>{let{value:n,label:t,attributes:u}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,key:n,ref:e=>s.push(e),onKeyDown:d,onClick:m},u,{className:(0,l.Z)("tabs__item",v,u?.className,{"tabs__item--active":o===n})}),t??n)})))}function k(e){let{lazy:n,children:t,selectedValue:r}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},l.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r}))))}function w(e){const n=h(e);return a.createElement("div",{className:(0,l.Z)("tabs-container",g)},a.createElement(y,(0,r.Z)({},e,n)),a.createElement(k,(0,r.Z)({},e,n)))}function T(e){const n=(0,b.Z)();return a.createElement(w,(0,r.Z)({key:String(n)},e))}},6309:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var r=t(7462),a=(t(7294),t(3905)),l=t(4866),u=t(5162);const o={},i="Colorscheme",c={unversionedId:"plugins/colorscheme",id:"plugins/colorscheme",title:"Colorscheme",description:"Example for changing the colorscheme to Gruvbox:",source:"@site/docs/plugins/colorscheme.md",sourceDirName:"plugins",slug:"/plugins/colorscheme",permalink:"/plugins/colorscheme",draft:!1,editUrl:"https://github.com/LazyVim/lazyvim.github.io/tree/main/docs/plugins/colorscheme.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Coding",permalink:"/plugins/coding"},next:{title:"Editor",permalink:"/plugins/editor"}},s={},p=[{value:"tokyonight.nvim",id:"tokyonightnvim",level:2},{value:"catppuccin",id:"catppuccin",level:2},{value:"bufferline.nvim <em>(optional)</em>",id:"bufferlinenvim-optional",level:2}],m={toc:p};function d(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"colorscheme"},"Colorscheme"),(0,a.kt)("p",null,"Example for changing the colorscheme to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ellisonleao/gruvbox.nvim"},"Gruvbox"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="lua/plugins/colorscheme.lua" {2,8}',title:'"lua/plugins/colorscheme.lua"',"{2,8}":!0},'return {\n  -- add gruvbox\n  { "ellisonleao/gruvbox.nvim" },\n\n  -- Configure LazyVim to load gruvbox\n  {\n    "LazyVim/LazyVim",\n    opts = {\n      colorscheme = "gruvbox",\n    },\n  }\n}\n')),(0,a.kt)("h2",{id:"tokyonightnvim"},(0,a.kt)("a",{parentName:"h2",href:"https://github.com/folke/tokyonight.nvim"},"tokyonight.nvim")),(0,a.kt)("p",null," tokyonight"),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'opts = { style = "moon" }\n'))),(0,a.kt)(u.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "folke/tokyonight.nvim",\n  lazy = true,\n  opts = { style = "moon" },\n}\n')))),(0,a.kt)("h2",{id:"catppuccin"},(0,a.kt)("a",{parentName:"h2",href:"https://github.com/catppuccin/nvim"},"catppuccin")),(0,a.kt)("p",null," catppuccin"),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'opts = {\n  integrations = {\n    aerial = true,\n    alpha = true,\n    cmp = true,\n    dashboard = true,\n    flash = true,\n    fzf = true,\n    grug_far = true,\n    gitsigns = true,\n    headlines = true,\n    illuminate = true,\n    indent_blankline = { enabled = true },\n    leap = true,\n    lsp_trouble = true,\n    mason = true,\n    markdown = true,\n    mini = true,\n    native_lsp = {\n      enabled = true,\n      underlines = {\n        errors = { "undercurl" },\n        hints = { "undercurl" },\n        warnings = { "undercurl" },\n        information = { "undercurl" },\n      },\n    },\n    navic = { enabled = true, custom_bg = "lualine" },\n    neotest = true,\n    neotree = true,\n    noice = true,\n    notify = true,\n    semantic_tokens = true,\n    snacks = true,\n    telescope = true,\n    treesitter = true,\n    treesitter_context = true,\n    which_key = true,\n  },\n}\n'))),(0,a.kt)(u.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "catppuccin/nvim",\n  lazy = true,\n  name = "catppuccin",\n  opts = {\n    integrations = {\n      aerial = true,\n      alpha = true,\n      cmp = true,\n      dashboard = true,\n      flash = true,\n      fzf = true,\n      grug_far = true,\n      gitsigns = true,\n      headlines = true,\n      illuminate = true,\n      indent_blankline = { enabled = true },\n      leap = true,\n      lsp_trouble = true,\n      mason = true,\n      markdown = true,\n      mini = true,\n      native_lsp = {\n        enabled = true,\n        underlines = {\n          errors = { "undercurl" },\n          hints = { "undercurl" },\n          warnings = { "undercurl" },\n          information = { "undercurl" },\n        },\n      },\n      navic = { enabled = true, custom_bg = "lualine" },\n      neotest = true,\n      neotree = true,\n      noice = true,\n      notify = true,\n      semantic_tokens = true,\n      snacks = true,\n      telescope = true,\n      treesitter = true,\n      treesitter_context = true,\n      which_key = true,\n    },\n  },\n  specs = {\n    {\n      "akinsho/bufferline.nvim",\n      optional = true,\n      opts = function(_, opts)\n        if (vim.g.colors_name or ""):find("catppuccin") then\n          opts.highlights = require("catppuccin.groups.integrations.bufferline").get_theme()\n        end\n      end,\n    },\n  },\n}\n')))),(0,a.kt)("h2",{id:"bufferlinenvim-optional"},(0,a.kt)("a",{parentName:"h2",href:"https://github.com/akinsho/bufferline.nvim"},"bufferline.nvim")," ",(0,a.kt)("em",{parentName:"h2"},"(optional)")),(0,a.kt)(l.Z,{mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'opts = function(_, opts)\n  if (vim.g.colors_name or ""):find("catppuccin") then\n    opts.highlights = require("catppuccin.groups.integrations.bufferline").get_theme()\n  end\nend\n'))),(0,a.kt)(u.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "akinsho/bufferline.nvim",\n  optional = true,\n  opts = function(_, opts)\n    if (vim.g.colors_name or ""):find("catppuccin") then\n      opts.highlights = require("catppuccin.groups.integrations.bufferline").get_theme()\n    end\n  end,\n}\n')))))}d.isMDXComponent=!0}}]);