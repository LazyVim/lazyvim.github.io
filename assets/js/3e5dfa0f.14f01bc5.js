"use strict";(self.webpackChunklazyvim=self.webpackChunklazyvim||[]).push([[6609],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=l(t),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||s;return t?a.createElement(f,i(i({ref:n},u),{},{components:t})):a.createElement(f,i({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var l=2;l<s;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(7294),r=t(6010);const s="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,i),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>w});var a=t(7462),r=t(7294),s=t(6010),i=t(2466),o=t(6550),c=t(1980),l=t(7392),u=t(12);function d(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,l.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const a=(0,o.k6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c._X)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function k(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=p(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[c,l]=f({queryString:t,groupId:a}),[d,k]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,u.Nk)(t);return[a,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),y=(()=>{const e=c??d;return m({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{y&&o(y)}),[y]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),l(e),k(e)}),[l,k,s]),tabValues:s}}var y=t(2389);const g="tabList__CuJ",b="tabItem_LNqP";function v(e){let{className:n,block:t,selectedValue:o,selectValue:c,tabValues:l}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const n=e.currentTarget,t=u.indexOf(n),a=l[t].value;a!==o&&(d(n),c(a))},m=e=>{let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},n)},l.map((e=>{let{value:n,label:t,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,key:n,ref:e=>u.push(e),onKeyDown:m,onClick:p},i,{className:(0,s.Z)("tabs__item",b,i?.className,{"tabs__item--active":o===n})}),t??n)})))}function h(e){let{lazy:n,children:t,selectedValue:a}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function S(e){const n=k(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",g)},r.createElement(v,(0,a.Z)({},e,n)),r.createElement(h,(0,a.Z)({},e,n)))}function w(e){const n=(0,y.Z)();return r.createElement(S,(0,a.Z)({key:String(n)},e))}},6045:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=t(7462),r=(t(7294),t(3905)),s=t(4866),i=t(5162);const o={},c="Snacks_picker",l={unversionedId:"extras/editor/snacks_picker",id:"extras/editor/snacks_picker",title:"Snacks_picker",description:"You can enable the extra with the :LazyExtras command.",source:"@site/docs/extras/editor/snacks_picker.md",sourceDirName:"extras/editor",slug:"/extras/editor/snacks_picker",permalink:"/extras/editor/snacks_picker",draft:!1,editUrl:"https://github.com/LazyVim/lazyvim.github.io/tree/main/docs/extras/editor/snacks_picker.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Refactoring",permalink:"/extras/editor/refactoring"},next:{title:"Telescope",permalink:"/extras/editor/telescope"}},u={},d=[{value:"Options",id:"options",level:3},{value:"snacks.nvim",id:"snacksnvim",level:2},{value:"snacks.nvim",id:"snacksnvim-1",level:2},{value:"nvim-lspconfig",id:"nvim-lspconfig",level:2},{value:"todo-comments.nvim <em>(optional)</em>",id:"todo-commentsnvim-optional",level:2}],p={toc:d};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"snacks_picker"},(0,r.kt)("inlineCode",{parentName:"h1"},"Snacks_picker")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can enable the extra with the ",(0,r.kt)("inlineCode",{parentName:"p"},":LazyExtras")," command.\nPlugins marked as optional will only be configured if they are installed.")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("p",null,"Additional options for this extra can be configured in your ",(0,r.kt)("a",{parentName:"p",href:"/configuration/general#options"},"lua/config/options.lua")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="lua/config/options.lua"',title:'"lua/config/options.lua"'},'-- In case you don\'t want to use `:LazyExtras`,\n-- then you need to set the option below.\nvim.g.lazyvim_picker = "snacks"\n')),(0,r.kt)("p",null,"Below you can find a list of included plugins and their default settings."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"You don't need to copy the default settings to your config.\nThey are only shown here for reference.")),(0,r.kt)("h2",{id:"snacksnvim"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/folke/snacks.nvim"},"snacks.nvim")),(0,r.kt)("p",null," recommended = true,"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"opts = {\n  picker = {},\n}\n"))),(0,r.kt)(i.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "folke/snacks.nvim",\n  opts = {\n    picker = {},\n  },\n  -- stylua: ignore\n  keys = {\n    { "<leader>,", function() Snacks.picker.buffers() end, desc = "Buffers" },\n    { "<leader>/", LazyVim.pick("grep"), desc = "Grep (Root Dir)" },\n    { "<leader>:", function() Snacks.picker.command_history() end, desc = "Command History" },\n    { "<leader><space>", LazyVim.pick("files"), desc = "Find Files (Root Dir)" },\n    -- find\n    { "<leader>fb", function() Snacks.picker.buffers() end, desc = "Buffers" },\n    { "<leader>fc", LazyVim.pick.config_files(), desc = "Find Config File" },\n    { "<leader>ff", LazyVim.pick("files"), desc = "Find Files (Root Dir)" },\n    { "<leader>fF", LazyVim.pick("files", { root = false }), desc = "Find Files (cwd)" },\n    { "<leader>fg", function() Snacks.picker.git_files() end, desc = "Find Files (git-files)" },\n    { "<leader>fr", LazyVim.pick("oldfiles"), desc = "Recent" },\n    { "<leader>fR", LazyVim.pick("oldfiles", { only_cwd = true }), desc = "Recent (cwd)" },\n    -- git\n    { "<leader>gc", function() Snacks.picker.git_log() end, desc = "Git Log" },\n    { "<leader>gs", function() Snacks.picker.git_status() end, desc = "Git Status" },\n    -- Grep\n    { "<leader>sb", function() Snacks.picker.lines() end, desc = "Buffer Lines" },\n    { "<leader>sB", function() Snacks.picker.grep_buffers() end, desc = "Grep Open Buffers" },\n    { "<leader>sg", LazyVim.pick("live_grep"), desc = "Grep (Root Dir)" },\n    { "<leader>sG", LazyVim.pick("live_grep", { root = false }), desc = "Grep (cwd)" },\n    { "<leader>sw", LazyVim.pick("grep_word"), desc = "Visual selection or word (Root Dir)", mode = { "n", "x" } },\n    { "<leader>sW", LazyVim.pick("grep_word", { root = false }), desc = "Visual selection or word (cwd)", mode = { "n", "x" } },\n    -- search\n    { \'<leader>s"\', function() Snacks.picker.registers() end, desc = "Registers" },\n    { "<leader>sa", function() Snacks.picker.autocmds() end, desc = "Autocmds" },\n    { "<leader>sc", function() Snacks.picker.command_history() end, desc = "Command History" },\n    { "<leader>sC", function() Snacks.picker.commands() end, desc = "Commands" },\n    { "<leader>sd", function() Snacks.picker.diagnostics() end, desc = "Diagnostics" },\n    { "<leader>sh", function() Snacks.picker.help() end, desc = "Help Pages" },\n    { "<leader>sH", function() Snacks.picker.highlights() end, desc = "Highlights" },\n    { "<leader>sj", function() Snacks.picker.jumps() end, desc = "Jumps" },\n    { "<leader>sk", function() Snacks.picker.keymaps() end, desc = "Keymaps" },\n    { "<leader>sl", function() Snacks.picker.loclist() end, desc = "Location List" },\n    { "<leader>sM", function() Snacks.picker.man() end, desc = "Man Pages" },\n    { "<leader>sm", function() Snacks.picker.marks() end, desc = "Marks" },\n    { "<leader>sR", function() Snacks.picker.resume() end, desc = "Resume" },\n    { "<leader>sq", function() Snacks.picker.qflist() end, desc = "Quickfix List" },\n    { "<leader>uC", function() Snacks.picker.colorschemes() end, desc = "Colorschemes" },\n    { "<leader>qp", function() Snacks.picker.projects() end, desc = "Projects" },\n  },\n}\n')))),(0,r.kt)("h2",{id:"snacksnvim-1"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/folke/snacks.nvim"},"snacks.nvim")),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'opts = function(_, opts)\n  if LazyVim.has("trouble.nvim") then\n    return vim.tbl_deep_extend("force", opts or {}, {\n      picker = {\n        actions = require("trouble.sources.snacks").actions,\n        win = {\n          input = {\n            keys = {\n              ["<c-t>"] = {\n                "trouble_open",\n                mode = { "n", "i" },\n              },\n            },\n          },\n        },\n      },\n    })\n  end\nend\n'))),(0,r.kt)(i.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "folke/snacks.nvim",\n  opts = function(_, opts)\n    if LazyVim.has("trouble.nvim") then\n      return vim.tbl_deep_extend("force", opts or {}, {\n        picker = {\n          actions = require("trouble.sources.snacks").actions,\n          win = {\n            input = {\n              keys = {\n                ["<c-t>"] = {\n                  "trouble_open",\n                  mode = { "n", "i" },\n                },\n              },\n            },\n          },\n        },\n      })\n    end\n  end,\n}\n')))),(0,r.kt)("h2",{id:"nvim-lspconfig"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/neovim/nvim-lspconfig"},"nvim-lspconfig")),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'opts = function()\n  if LazyVim.pick.want() ~= "snacks" then\n    return\n  end\n  local Keys = require("lazyvim.plugins.lsp.keymaps").get()\n  -- stylua: ignore\n  vim.list_extend(Keys, {\n    { "gd", function() Snacks.picker.lsp_definitions() end, desc = "Goto Definition", has = "definition" },\n    { "gr", function() Snacks.picker.lsp_references() end, nowait = true, desc = "References" },\n    { "gI", function() Snacks.picker.lsp_implementations() end, desc = "Goto Implementation" },\n    { "gy", function() Snacks.picker.lsp_type_definitions() end, desc = "Goto T[y]pe Definition" },\n    { "<leader>ss", function() Snacks.picker.lsp_symbols() end, desc = "LSP Symbols", has = "documentSymbol" },\n  })\nend\n'))),(0,r.kt)(i.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "neovim/nvim-lspconfig",\n  opts = function()\n    if LazyVim.pick.want() ~= "snacks" then\n      return\n    end\n    local Keys = require("lazyvim.plugins.lsp.keymaps").get()\n    -- stylua: ignore\n    vim.list_extend(Keys, {\n      { "gd", function() Snacks.picker.lsp_definitions() end, desc = "Goto Definition", has = "definition" },\n      { "gr", function() Snacks.picker.lsp_references() end, nowait = true, desc = "References" },\n      { "gI", function() Snacks.picker.lsp_implementations() end, desc = "Goto Implementation" },\n      { "gy", function() Snacks.picker.lsp_type_definitions() end, desc = "Goto T[y]pe Definition" },\n      { "<leader>ss", function() Snacks.picker.lsp_symbols() end, desc = "LSP Symbols", has = "documentSymbol" },\n    })\n  end,\n}\n')))),(0,r.kt)("h2",{id:"todo-commentsnvim-optional"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/folke/todo-comments.nvim"},"todo-comments.nvim")," ",(0,r.kt)("em",{parentName:"h2"},"(optional)")),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"opts = nil\n"))),(0,r.kt)(i.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "folke/todo-comments.nvim",\n  optional = true,\n  -- stylua: ignore\n  keys = {\n    { "<leader>st", function() Snacks.picker.todo_comments() end, desc = "Todo" },\n    { "<leader>sT", function () Snacks.picker.todo_comments({ keywords = { "TODO", "FIX", "FIXME" } }) end, desc = "Todo/Fix/Fixme" },\n  },\n}\n')))))}m.isMDXComponent=!0}}]);