"use strict";(self.webpackChunklazyvim=self.webpackChunklazyvim||[]).push([[1236],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(n),d=l,k=m["".concat(i,".").concat(d)]||m[d]||c[d]||r;return n?a.createElement(k,o(o({ref:t},p),{},{components:n})):a.createElement(k,o({ref:t},p))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[m]="string"==typeof e?e:l,o[1]=s;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),l=n(6010);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(7462),l=n(7294),r=n(6010),o=n(2466),s=n(6550),i=n(1980),u=n(7392),p=n(12);function m(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:l}}=e;return{value:t,label:n,attributes:a,default:l}}))}function c(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??m(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(r),(0,l.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=c(e),[o,s]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[i,u]=k({queryString:n,groupId:a}),[m,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,p.Nk)(n);return[a,(0,l.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),v=(()=>{const e=i??m;return d({value:e,tabValues:r})?e:null})();(0,l.useLayoutEffect)((()=>{v&&s(v)}),[v]);return{selectedValue:o,selectValue:(0,l.useCallback)((e=>{if(!d({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),h(e)}),[u,h,r]),tabValues:r}}var v=n(2389);const b="tabList__CuJ",g="tabItem_LNqP";function f(e){let{className:t,block:n,selectedValue:s,selectValue:i,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:m}=(0,o.o5)(),c=e=>{const t=e.currentTarget,n=p.indexOf(t),a=u[n].value;a!==s&&(m(t),i(a))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:o}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>p.push(e),onKeyDown:d,onClick:c},o,{className:(0,r.Z)("tabs__item",g,o?.className,{"tabs__item--active":s===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function T(e){const t=h(e);return l.createElement("div",{className:(0,r.Z)("tabs-container",b)},l.createElement(f,(0,a.Z)({},e,t)),l.createElement(y,(0,a.Z)({},e,t)))}function N(e){const t=(0,v.Z)();return l.createElement(T,(0,a.Z)({key:String(t)},e))}},6081:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>u,toc:()=>m});var a=n(7462),l=(n(7294),n(3905)),r=n(4866),o=n(5162);const s={},i="Haskell",u={unversionedId:"extras/lang/haskell",id:"extras/lang/haskell",title:"Haskell",description:"You can enable the extra with the :LazyExtras command.",source:"@site/docs/extras/lang/haskell.md",sourceDirName:"extras/lang",slug:"/extras/lang/haskell",permalink:"/extras/lang/haskell",draft:!1,editUrl:"https://github.com/LazyVim/lazyvim.github.io/tree/main/docs/extras/lang/haskell.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Go",permalink:"/extras/lang/go"},next:{title:"Helm",permalink:"/extras/lang/helm"}},p={},m=[{value:"nvim-treesitter",id:"nvim-treesitter",level:2},{value:"haskell-tools.nvim",id:"haskell-toolsnvim",level:2},{value:"mason.nvim",id:"masonnvim",level:2},{value:"mason.nvim",id:"masonnvim-1",level:2},{value:"neotest-haskell",id:"neotest-haskell",level:2},{value:"haskell-snippets.nvim",id:"haskell-snippetsnvim",level:2},{value:"LuaSnip",id:"luasnip",level:2},{value:"telescope_hoogle",id:"telescope_hoogle",level:2},{value:"nvim-lspconfig",id:"nvim-lspconfig",level:2},{value:"nvim-dap <em>(optional)</em>",id:"nvim-dap-optional",level:2},{value:"neotest <em>(optional)</em>",id:"neotest-optional",level:2},{value:"telescope.nvim <em>(optional)</em>",id:"telescopenvim-optional",level:2},{value:"conform.nvim <em>(optional)</em>",id:"conformnvim-optional",level:2},{value:"nvim-lint <em>(optional)</em>",id:"nvim-lint-optional",level:2}],c={toc:m};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"haskell"},(0,l.kt)("inlineCode",{parentName:"h1"},"Haskell")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"You can enable the extra with the ",(0,l.kt)("inlineCode",{parentName:"p"},":LazyExtras")," command.\nPlugins marked as optional will only be configured if they are installed.")),(0,l.kt)("p",null,"Below you can find a list of included plugins and their default settings."),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"You don't need to copy the default settings to your config.\nThey are only shown here for reference.")),(0,l.kt)("h2",{id:"nvim-treesitter"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/nvim-treesitter/nvim-treesitter"},"nvim-treesitter")),(0,l.kt)("p",null," Add Haskell to treesitter"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'opts = { ensure_installed = { "haskell" } }\n'))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "nvim-treesitter/nvim-treesitter",\n  opts = { ensure_installed = { "haskell" } },\n}\n')))),(0,l.kt)("h2",{id:"haskell-toolsnvim"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/mrcjkb/haskell-tools.nvim"},"haskell-tools.nvim")),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"opts = nil\n"))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "mrcjkb/haskell-tools.nvim",\n  version = false,\n  ft = { "haskell", "lhaskell", "cabal", "cabalproject" },\n  keys = {\n    {\n      "<localleader>e",\n      "<cmd>HlsEvalAll<cr>",\n      ft = "haskell",\n      desc = "Evaluate All",\n    },\n    {\n      "<localleader>h",\n      function()\n        require("haskell-tools").hoogle.hoogle_signature()\n      end,\n      ft = "haskell",\n      desc = "Hoogle Signature",\n    },\n    {\n      "<localleader>r",\n      function()\n        require("haskell-tools").repl.toggle()\n      end,\n      ft = "haskell",\n      desc = "REPL (Package)",\n    },\n    {\n      "<localleader>R",\n      function()\n        require("haskell-tools").repl.toggle(vim.api.nvim_buf_get_name(0))\n      end,\n      ft = "haskell",\n      desc = "REPL (Buffer)",\n    },\n  },\n}\n')))),(0,l.kt)("h2",{id:"masonnvim"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/mason-org/mason.nvim"},"mason.nvim")),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'opts = { ensure_installed = { "haskell-language-server" } }\n'))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "mason-org/mason.nvim",\n  opts = { ensure_installed = { "haskell-language-server" } },\n}\n')))),(0,l.kt)("h2",{id:"masonnvim-1"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/mason-org/mason.nvim"},"mason.nvim")),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'opts = { ensure_installed = { "haskell-debug-adapter" } }\n'))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "mason-org/mason.nvim",\n  opts = { ensure_installed = { "haskell-debug-adapter" } },\n}\n')))),(0,l.kt)("h2",{id:"neotest-haskell"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/mrcjkb/neotest-haskell"},"neotest-haskell")),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"opts = nil\n"))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{ "mrcjkb/neotest-haskell" }\n')))),(0,l.kt)("h2",{id:"haskell-snippetsnvim"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/mrcjkb/haskell-snippets.nvim"},"haskell-snippets.nvim")),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"opts = {}\n"))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "mrcjkb/haskell-snippets.nvim",\n  dependencies = { "L3MON4D3/LuaSnip" },\n  ft = { "haskell", "lhaskell", "cabal", "cabalproject" },\n  config = function()\n    local haskell_snippets = require("haskell-snippets").all\n    require("luasnip").add_snippets("haskell", haskell_snippets, { key = "haskell" })\n  end,\n}\n')))),(0,l.kt)("h2",{id:"luasnip"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/L3MON4D3/LuaSnip"},"LuaSnip")),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"opts = nil\n"))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{ "L3MON4D3/LuaSnip" }\n')))),(0,l.kt)("h2",{id:"telescope_hoogle"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/luc-tielen/telescope_hoogle"},"telescope_hoogle")),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'opts = function()\n  LazyVim.on_load("telescope.nvim", function()\n    require("telescope").load_extension("ht")\n  end)\nend\n'))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "luc-tielen/telescope_hoogle",\n  ft = { "haskell", "lhaskell", "cabal", "cabalproject" },\n  opts = function()\n    LazyVim.on_load("telescope.nvim", function()\n      require("telescope").load_extension("ht")\n    end)\n  end,\n  keys = {\n    {\n      "<localleader>H",\n      "<cmd>Telescope hoogle<cr>",\n      ft = "haskell",\n      desc = "Hoogle",\n    },\n  },\n}\n')))),(0,l.kt)("h2",{id:"nvim-lspconfig"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/neovim/nvim-lspconfig"},"nvim-lspconfig")),(0,l.kt)("p",null," Make sure lspconfig doesn't start hls,\nas it conflicts with haskell-tools"),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"opts = {\n  setup = {\n    hls = function()\n      return true\n    end,\n  },\n}\n"))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "neovim/nvim-lspconfig",\n  opts = {\n    setup = {\n      hls = function()\n        return true\n      end,\n    },\n  },\n}\n')))),(0,l.kt)("h2",{id:"nvim-dap-optional"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/mfussenegger/nvim-dap"},"nvim-dap")," ",(0,l.kt)("em",{parentName:"h2"},"(optional)")),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"opts = nil\n"))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "mfussenegger/nvim-dap",\n  optional = true,\n  dependencies = {\n    {\n      "mason-org/mason.nvim",\n      opts = { ensure_installed = { "haskell-debug-adapter" } },\n    },\n  },\n}\n')))),(0,l.kt)("h2",{id:"neotest-optional"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/nvim-neotest/neotest"},"neotest")," ",(0,l.kt)("em",{parentName:"h2"},"(optional)")),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'opts = {\n  adapters = {\n    ["neotest-haskell"] = {},\n  },\n}\n'))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "nvim-neotest/neotest",\n  optional = true,\n  dependencies = {\n    { "mrcjkb/neotest-haskell" },\n  },\n  opts = {\n    adapters = {\n      ["neotest-haskell"] = {},\n    },\n  },\n}\n')))),(0,l.kt)("h2",{id:"telescopenvim-optional"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/nvim-telescope/telescope.nvim"},"telescope.nvim")," ",(0,l.kt)("em",{parentName:"h2"},"(optional)")),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"opts = nil\n"))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "nvim-telescope/telescope.nvim",\n  optional = true,\n  specs = {\n    {\n      "luc-tielen/telescope_hoogle",\n      ft = { "haskell", "lhaskell", "cabal", "cabalproject" },\n      opts = function()\n        LazyVim.on_load("telescope.nvim", function()\n          require("telescope").load_extension("ht")\n        end)\n      end,\n      keys = {\n        {\n          "<localleader>H",\n          "<cmd>Telescope hoogle<cr>",\n          ft = "haskell",\n          desc = "Hoogle",\n        },\n      },\n    },\n  },\n}\n')))),(0,l.kt)("h2",{id:"conformnvim-optional"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/stevearc/conform.nvim"},"conform.nvim")," ",(0,l.kt)("em",{parentName:"h2"},"(optional)")),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'opts = {\n  formatters_by_ft = {\n    haskell = { "fourmolu" },\n    cabal = { "cabal_fmt" },\n  },\n}\n'))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "stevearc/conform.nvim",\n  optional = true,\n  opts = {\n    formatters_by_ft = {\n      haskell = { "fourmolu" },\n      cabal = { "cabal_fmt" },\n    },\n  },\n}\n')))),(0,l.kt)("h2",{id:"nvim-lint-optional"},(0,l.kt)("a",{parentName:"h2",href:"https://github.com/mfussenegger/nvim-lint"},"nvim-lint")," ",(0,l.kt)("em",{parentName:"h2"},"(optional)")),(0,l.kt)(r.Z,{mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'opts = {\n  linters_by_ft = {\n    haskell = { "hlint" },\n  },\n}\n'))),(0,l.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "mfussenegger/nvim-lint",\n  optional = true,\n  opts = {\n    linters_by_ft = {\n      haskell = { "hlint" },\n    },\n  },\n}\n')))))}d.isMDXComponent=!0}}]);