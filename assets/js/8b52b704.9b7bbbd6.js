"use strict";(self.webpackChunklazyvim=self.webpackChunklazyvim||[]).push([[5341],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(7294),a=n(6010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>O});var r=n(7462),a=n(7294),o=n(6010),l=n(2466),i=n(6550),c=n(1980),s=n(7392),u=n(12);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function v(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=d(e),[l,i]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[c,s]=f({queryString:n,groupId:r}),[p,v]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,u.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),b=(()=>{const e=c??p;return m({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),s(e),v(e)}),[s,v,o]),tabValues:o}}var b=n(2389);const h="tabList__CuJ",y="tabItem_LNqP";function g(e){let{className:t,block:n,selectedValue:i,selectValue:c,tabValues:s}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),r=s[n].value;r!==i&&(p(t),c(r))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},l,{className:(0,o.Z)("tabs__item",y,l?.className,{"tabs__item--active":i===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:r}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function w(e){const t=v(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",h)},a.createElement(g,(0,r.Z)({},e,t)),a.createElement(k,(0,r.Z)({},e,t)))}function O(e){const t=(0,b.Z)();return a.createElement(w,(0,r.Z)({key:String(t)},e))}},6705:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905)),o=n(4866),l=n(5162);const i={},c="Octo",s={unversionedId:"extras/util/octo",id:"extras/util/octo",title:"Octo",description:"You can enable the extra with the :LazyExtras command.",source:"@site/docs/extras/util/octo.md",sourceDirName:"extras/util",slug:"/extras/util/octo",permalink:"/extras/util/octo",draft:!1,editUrl:"https://github.com/LazyVim/lazyvim.github.io/tree/main/docs/extras/util/octo.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Mini Hipatterns",permalink:"/extras/util/mini-hipatterns"},next:{title:"Project",permalink:"/extras/util/project"}},u={},p=[{value:"Includes the following extras",id:"includes-the-following-extras",level:3},{value:"octo.nvim",id:"octonvim",level:2},{value:"octo.nvim",id:"octonvim-1",level:2}],d={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"octo"},(0,a.kt)("inlineCode",{parentName:"h1"},"Octo")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You can enable the extra with the ",(0,a.kt)("inlineCode",{parentName:"p"},":LazyExtras")," command.\nPlugins marked as optional will only be configured if they are installed.")),(0,a.kt)("p",null,"Below you can find a list of included plugins and their default settings."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"You don't need to copy the default settings to your config.\nThey are only shown here for reference.")),(0,a.kt)("h3",{id:"includes-the-following-extras"},"Includes the following extras"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/extras/lang/git"},"lang.git"))),(0,a.kt)("h2",{id:"octonvim"},(0,a.kt)("a",{parentName:"h2",href:"https://github.com/pwntester/octo.nvim"},"octo.nvim")),(0,a.kt)("p",null," Octo"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'opts = {\n  enable_builtin = true,\n  default_to_projects_v2 = true,\n  default_merge_method = "squash",\n  picker = "telescope",\n}\n'))),(0,a.kt)(l.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "pwntester/octo.nvim",\n  cmd = "Octo",\n  event = { { event = "BufReadCmd", pattern = "octo://*" } },\n  opts = {\n    enable_builtin = true,\n    default_to_projects_v2 = true,\n    default_merge_method = "squash",\n    picker = "telescope",\n  },\n  keys = {\n    { "<leader>gi", "<cmd>Octo issue list<CR>", desc = "List Issues (Octo)" },\n    { "<leader>gI", "<cmd>Octo issue search<CR>", desc = "Search Issues (Octo)" },\n    { "<leader>gp", "<cmd>Octo pr list<CR>", desc = "List PRs (Octo)" },\n    { "<leader>gP", "<cmd>Octo pr search<CR>", desc = "Search PRs (Octo)" },\n    { "<leader>gr", "<cmd>Octo repo list<CR>", desc = "List Repos (Octo)" },\n    { "<leader>gS", "<cmd>Octo search<CR>", desc = "Search (Octo)" },\n\n    { "<localleader>a", "", desc = "+assignee (Octo)", ft = "octo" },\n    { "<localleader>c", "", desc = "+comment/code (Octo)", ft = "octo" },\n    { "<localleader>l", "", desc = "+label (Octo)", ft = "octo" },\n    { "<localleader>i", "", desc = "+issue (Octo)", ft = "octo" },\n    { "<localleader>r", "", desc = "+react (Octo)", ft = "octo" },\n    { "<localleader>p", "", desc = "+pr (Octo)", ft = "octo" },\n    { "<localleader>pr", "", desc = "+rebase (Octo)", ft = "octo" },\n    { "<localleader>ps", "", desc = "+squash (Octo)", ft = "octo" },\n    { "<localleader>v", "", desc = "+review (Octo)", ft = "octo" },\n    { "<localleader>g", "", desc = "+goto_issue (Octo)", ft = "octo" },\n    { "@", "@<C-x><C-o>", mode = "i", ft = "octo", silent = true },\n    { "#", "#<C-x><C-o>", mode = "i", ft = "octo", silent = true },\n  },\n}\n')))),(0,a.kt)("h2",{id:"octonvim-1"},(0,a.kt)("a",{parentName:"h2",href:"https://github.com/pwntester/octo.nvim"},"octo.nvim")),(0,a.kt)("p",null," Octo Picker"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'opts = function(_, opts)\n  vim.treesitter.language.register("markdown", "octo")\n  if LazyVim.has_extra("editor.telescope") then\n    opts.picker = "telescope"\n  elseif LazyVim.has_extra("editor.fzf") then\n    opts.picker = "fzf-lua"\n  elseif LazyVim.has_extra("editor.snacks_picker") then\n    opts.picker = "snacks"\n  else\n    LazyVim.error("`octo.nvim` requires `telescope.nvim` or `fzf-lua` or `snacks.nvim`")\n  end\n\n  -- Keep some empty windows in sessions\n  vim.api.nvim_create_autocmd("ExitPre", {\n    group = vim.api.nvim_create_augroup("octo_exit_pre", { clear = true }),\n    callback = function(ev)\n      local keep = { "octo" }\n      for _, win in ipairs(vim.api.nvim_list_wins()) do\n        local buf = vim.api.nvim_win_get_buf(win)\n        if vim.tbl_contains(keep, vim.bo[buf].filetype) then\n          vim.bo[buf].buftype = "" -- set buftype to empty to keep the window\n        end\n      end\n    end,\n  })\nend\n'))),(0,a.kt)(l.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "pwntester/octo.nvim",\n  opts = function(_, opts)\n    vim.treesitter.language.register("markdown", "octo")\n    if LazyVim.has_extra("editor.telescope") then\n      opts.picker = "telescope"\n    elseif LazyVim.has_extra("editor.fzf") then\n      opts.picker = "fzf-lua"\n    elseif LazyVim.has_extra("editor.snacks_picker") then\n      opts.picker = "snacks"\n    else\n      LazyVim.error("`octo.nvim` requires `telescope.nvim` or `fzf-lua` or `snacks.nvim`")\n    end\n\n    -- Keep some empty windows in sessions\n    vim.api.nvim_create_autocmd("ExitPre", {\n      group = vim.api.nvim_create_augroup("octo_exit_pre", { clear = true }),\n      callback = function(ev)\n        local keep = { "octo" }\n        for _, win in ipairs(vim.api.nvim_list_wins()) do\n          local buf = vim.api.nvim_win_get_buf(win)\n          if vim.tbl_contains(keep, vim.bo[buf].filetype) then\n            vim.bo[buf].buftype = "" -- set buftype to empty to keep the window\n          end\n        end\n      end,\n    })\n  end,\n}\n')))))}m.isMDXComponent=!0}}]);