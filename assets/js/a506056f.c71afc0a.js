"use strict";(self.webpackChunklazyvim=self.webpackChunklazyvim||[]).push([[7934],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),p=i,m=d["".concat(s,".").concat(p)]||d[p]||f[p]||a;return t?r.createElement(m,o(o({ref:n},c),{},{components:t})):r.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>o});var r=t(7294),i=t(6010);const a="tabItem_Ymn6";function o(e){let{children:n,hidden:t,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(a,o),hidden:t},n)}},4866:(e,n,t)=>{t.d(n,{Z:()=>k});var r=t(7462),i=t(7294),a=t(6010),o=t(2466),l=t(6550),s=t(1980),u=t(7392),c=t(12);function d(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}function f(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,u.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,l.k6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s._X)(a),(0,i.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(r.location.search);n.set(a,e),r.replace({...r.location,search:n.toString()})}),[a,r])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,a=f(e),[o,l]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:a}))),[s,u]=m({queryString:t,groupId:r}),[d,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,a]=(0,c.Nk)(t);return[r,(0,i.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:r}),h=(()=>{const e=s??d;return p({value:e,tabValues:a})?e:null})();(0,i.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,a]),tabValues:a}}var h=t(2389);const _="tabList__CuJ",g="tabItem_LNqP";function v(e){let{className:n,block:t,selectedValue:l,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),f=e=>{const n=e.currentTarget,t=c.indexOf(n),r=u[t].value;r!==l&&(d(n),s(r))},p=e=>{let n=null;switch(e.key){case"Enter":f(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n)},u.map((e=>{let{value:n,label:t,attributes:o}=e;return i.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>c.push(e),onKeyDown:p,onClick:f},o,{className:(0,a.Z)("tabs__item",g,o?.className,{"tabs__item--active":l===n})}),t??n)})))}function y(e){let{lazy:n,children:t,selectedValue:r}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},a.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r}))))}function w(e){const n=b(e);return i.createElement("div",{className:(0,a.Z)("tabs-container",_)},i.createElement(v,(0,r.Z)({},e,n)),i.createElement(y,(0,r.Z)({},e,n)))}function k(e){const n=(0,h.Z)();return i.createElement(w,(0,r.Z)({key:String(n)},e))}},6946:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var r=t(7462),i=(t(7294),t(3905)),a=t(4866),o=t(5162);const l={},s="Mini Files",u={unversionedId:"extras/editor/mini-files",id:"extras/editor/mini-files",title:"Mini Files",description:"You can enable the extra with the :LazyExtras command.",source:"@site/docs/extras/editor/mini-files.md",sourceDirName:"extras/editor",slug:"/extras/editor/mini-files",permalink:"/extras/editor/mini-files",draft:!1,editUrl:"https://github.com/LazyVim/lazyvim.github.io/tree/main/docs/extras/editor/mini-files.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Mini-diff",permalink:"/extras/editor/mini-diff"},next:{title:"Mini-move",permalink:"/extras/editor/mini-move"}},c={},d=[{value:"mini.files",id:"minifiles",level:2}],f={toc:d};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mini-files"},"Mini Files"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"You can enable the extra with the ",(0,i.kt)("inlineCode",{parentName:"p"},":LazyExtras")," command.\nPlugins marked as optional will only be configured if they are installed.")),(0,i.kt)("p",null,"Below you can find a list of included plugins and their default settings."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"You don't need to copy the default settings to your config.\nThey are only shown here for reference.")),(0,i.kt)("h2",{id:"minifiles"},(0,i.kt)("a",{parentName:"h2",href:"https://github.com/nvim-mini/mini.files"},"mini.files")),(0,i.kt)(a.Z,{mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"opts",label:"Options",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"opts = {\n  windows = {\n    preview = true,\n    width_focus = 30,\n    width_preview = 30,\n  },\n  options = {\n    -- Whether to use for editing directories\n    -- Disabled by default in LazyVim because neo-tree is used for that\n    use_as_default_explorer = false,\n  },\n}\n"))),(0,i.kt)(o.Z,{value:"code",label:"Full Spec",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'{\n  "nvim-mini/mini.files",\n  opts = {\n    windows = {\n      preview = true,\n      width_focus = 30,\n      width_preview = 30,\n    },\n    options = {\n      -- Whether to use for editing directories\n      -- Disabled by default in LazyVim because neo-tree is used for that\n      use_as_default_explorer = false,\n    },\n  },\n  keys = {\n    {\n      "<leader>fm",\n      function()\n        require("mini.files").open(vim.api.nvim_buf_get_name(0), true)\n      end,\n      desc = "Open mini.files (Directory of Current File)",\n    },\n    {\n      "<leader>fM",\n      function()\n        require("mini.files").open(vim.uv.cwd(), true)\n      end,\n      desc = "Open mini.files (cwd)",\n    },\n  },\n  config = function(_, opts)\n    require("mini.files").setup(opts)\n\n    local show_dotfiles = true\n    local filter_show = function(fs_entry)\n      return true\n    end\n    local filter_hide = function(fs_entry)\n      return not vim.startswith(fs_entry.name, ".")\n    end\n\n    local toggle_dotfiles = function()\n      show_dotfiles = not show_dotfiles\n      local new_filter = show_dotfiles and filter_show or filter_hide\n      require("mini.files").refresh({ content = { filter = new_filter } })\n    end\n\n    local map_split = function(buf_id, lhs, direction, close_on_file)\n      local rhs = function()\n        local new_target_window\n        local cur_target_window = require("mini.files").get_explorer_state().target_window\n        if cur_target_window ~= nil then\n          vim.api.nvim_win_call(cur_target_window, function()\n            vim.cmd("belowright " .. direction .. " split")\n            new_target_window = vim.api.nvim_get_current_win()\n          end)\n\n          require("mini.files").set_target_window(new_target_window)\n          require("mini.files").go_in({ close_on_file = close_on_file })\n        end\n      end\n\n      local desc = "Open in " .. direction .. " split"\n      if close_on_file then\n        desc = desc .. " and close"\n      end\n      vim.keymap.set("n", lhs, rhs, { buffer = buf_id, desc = desc })\n    end\n\n    local files_set_cwd = function()\n      local cur_entry_path = MiniFiles.get_fs_entry().path\n      local cur_directory = vim.fs.dirname(cur_entry_path)\n      if cur_directory ~= nil then\n        vim.fn.chdir(cur_directory)\n      end\n    end\n\n    vim.api.nvim_create_autocmd("User", {\n      pattern = "MiniFilesBufferCreate",\n      callback = function(args)\n        local buf_id = args.data.buf_id\n\n        vim.keymap.set(\n          "n",\n          opts.mappings and opts.mappings.toggle_hidden or "g.",\n          toggle_dotfiles,\n          { buffer = buf_id, desc = "Toggle hidden files" }\n        )\n\n        vim.keymap.set(\n          "n",\n          opts.mappings and opts.mappings.change_cwd or "gc",\n          files_set_cwd,\n          { buffer = args.data.buf_id, desc = "Set cwd" }\n        )\n\n        map_split(buf_id, opts.mappings and opts.mappings.go_in_horizontal or "<C-w>s", "horizontal", false)\n        map_split(buf_id, opts.mappings and opts.mappings.go_in_vertical or "<C-w>v", "vertical", false)\n        map_split(buf_id, opts.mappings and opts.mappings.go_in_horizontal_plus or "<C-w>S", "horizontal", true)\n        map_split(buf_id, opts.mappings and opts.mappings.go_in_vertical_plus or "<C-w>V", "vertical", true)\n      end,\n    })\n\n    vim.api.nvim_create_autocmd("User", {\n      pattern = "MiniFilesActionRename",\n      callback = function(event)\n        Snacks.rename.on_rename_file(event.data.from, event.data.to)\n      end,\n    })\n  end,\n}\n')))))}p.isMDXComponent=!0}}]);